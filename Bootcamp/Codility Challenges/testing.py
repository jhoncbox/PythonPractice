def solution1(A):
    num = 1
    A.sort()
    for v in A:
        if v == num:
            num += 1 
        elif v > num:
            break
    return num

def solution2(A, B):
    A.sort()
    B.sort()
    i = 0
    for a in A:
        while i < len(B)-1 and B[i] < a:
            i += 1
        if a == B[i]:
            return a
    return -1

test1 = [1, 3, 2, 1,1,2,3,1,2,3,1] 
test2 = [1,10,0]
test3 = [764,1,9131,8404,8257,29,9102,9627,6664,8796,8909,2380,7685,3192,1714,4,2554,8446,980,5837,8216,3813,4344,2530,6800,7652,9339,5027,7701,5641,822,7056,9169,8299,3272,477,7055,4870,955,4829,3002,6258,8173,4101,6661,3053,9436,6843,1145,2594,9979,7449,2497,501,5696,9705,6995,6945,3732,1023,8214,5081,1535,108,3354,3063,2224,8149,5362,9804,6891,6968,1868,2018,8418,2495,342,7910,6497,9566,6702,6803,6804,5562,9917,2107,4286,3901,5432,9152,974,4563,7341,7180,2281,6131,6059,4096,9816,5468,5630,9026,8471,5641,6209,6496,7762,2286,9490,5143,8328,2820,5600,768,1371,8794,9843,7898,479,2112,5199,5526,9390,8962,6420,3942,650,5106,7835,194,9609,4114,4401,3332,6970,5497,7461,33,3979,7604,7487,2718,255,1129,90,9580,143,5400,428,3646,6030,5680,5430,764,3282,6247,1673,548,3695,3830,2076,3592,9079,6666,6412,9849,5467,6129,6666,3549,2320,7062,2444,624,8490,8262,423,7570,5955,7031,6493,9812,5122,9875,8324,3838,7980,5378,9861,1620,3562,7776,869,2060,1839,9029,6003,2892,6787,8128,7042,6113,1511,3121,5467,3524,6980,7386,3472,3510,1983,8953,552,9832,3210,4549,2495,706,5431,366,8936,138,4023,9432,9175,3246,6042,3285,3973,965,8325,6990,1161,8028,6392,6850,316,7143,5614,8352,8623,8799,8878,5017,4866,9762,9362,5093,1011,19,462,9097,5505,9740,6206,9391,6541,8050,7043,8405,94,7064,245,594,1467,2408,2074,6677,3074,5465,4469,9290,5030,9564,4215,4920,1609,2973,5323,5540,5299,2961,9120,1604,6908,6389,1867,4448,9370,4475,2234,751,3819,1704,9178,4365,7213,1617,1095,6353,1841,766,2793,1026,1829,8595,4385,2363,846,646,29,8918,3089,794,5681,2333,3450,1892,8541,7227,9061,2687,4894,6117,8046,9777,3381,2849,887,2231,1245,8066,9696,1393,9982,3026,2716,563,44,2644,6940,1203,6587,2932,6311,4657,339,677,8945,43,440,3904,5304,5554,7345,8587,6399,243,5216,1203,5377,9898,7799,8731,6256,7644,4264,8194,6633,8168,8118,673,8988,6212,880,8065,3877,5677,2267,4607,9235,6327,2411,464,258,3402,203,5103,8801,3607,8777,2021,9092,3095,9435,7780,2155,3200,864,6299,9037,5838,2332,3638,3357,9877,9005,6716,410,3875,5939,659,4172,7244,8668,41,9869,733,4240,4622,3057,8051,457,4073,2235,8589,4224,6708,9502,7075,9102,2735,7587,7505,2252,8770,9893,1695,9489,301,5695,7482,2276,7087,4746,1660,3192,6677,978,2185,2663,7196,385,1916,6078,6486,402,4148,3759,7526,7626,2602,3]
test4 = [764,9131,8404,8257,29,9102,9627,6664,8796,8909,2380,7685,3192,1714,4,2554,8446,980,5837,8216,3813,4344,2530,6800,7652,9339,5027,7701,5641,822,7056,9169,8299,3272,477,7055,4870,955,4829,3002,6258,8173,4101,6661,3053,9436,6843,1145,2594,9979,7449,2497,501,5696,9705,6995,6945,3732,1023,8214,5081,1535,108,3354,3063,2224,8149,5362,9804,6891,6968,1868,2018,8418,2495,342,7910,6497,9566,6702,6803,6804,5562,9917,2107,4286,3901,5432,9152,974,4563,7341,7180,2281,6131,6059,4096,9816,5468,5630,9026,8471,5641,6209,6496,7762,2286,9490,5143,8328,2820,5600,768,1371,8794,9843,7898,479,2112,5199,5526,9390,8962,6420,3942,650,5106,7835,194,9609,4114,4401,3332,6970,5497,7461,33,3979,7604,7487,2718,255,1129,90,9580,143,5400,428,3646,6030,5680,5430,764,3282,6247,1673,548,3695,3830,2076,3592,9079,6666,6412,9849,5467,6129,6666,3549,2320,7062,2444,624,8490,8262,423,7570,5955,7031,6493,9812,5122,9875,8324,3838,7980,5378,9861,1620,3562,7776,869,2060,1839,9029,6003,2892,6787,8128,7042,6113,1511,3121,5467,3524,6980,7386,3472,3510,1983,8953,552,9832,3210,4549,2495,706,5431,366,8936,138,4023,9432,9175,3246,6042,3285,3973,965,8325,6990,1161,8028,6392,6850,316,7143,5614,8352,8623,8799,8878,5017,4866,9762,9362,5093,1011,19,462,9097,5505,9740,6206,9391,6541,8050,7043,8405,94,7064,245,594,1467,2408,2074,6677,3074,5465,4469,9290,5030,9564,4215,4920,1609,2973,5323,5540,5299,2961,9120,1604,6908,1,6389,1867,4448,9370,4475,2234,751,3819,1704,9178,4365,7213,1617,1095,6353,1841,766,2793,1026,1829,8595,4385,2363,846,646,29,8918,3089,794,5681,2333,3450,1892,8541,7227,9061,2687,4894,6117,8046,9777,3381,2849,887,2231,1245,8066,9696,1393,9982,3026,2716,563,44,2644,6940,1203,6587,2932,6311,4657,339,677,8945,43,440,3904,5304,5554,7345,8587,6399,243,5216,1203,5377,9898,7799,8731,6256,7644,4264,8194,6633,8168,8118,673,8988,6212,880,8065,3877,5677,2267,4607,9235,6327,2411,464,258,3402,203,5103,8801,3607,8777,2021,9092,3095,9435,7780,2155,3200,864,6299,9037,5838,2332,3638,3357,9877,9005,6716,410,3875,5939,659,4172,7244,8668,41,9869,733,4240,4622,3057,8051,457,4073,2235,8589,4224,6708,9502,7075,9102,2735,7587,7505,2252,8770,9893,1695,9489,301,5695,7482,2276,7087,4746,1660,3192,6677,978,2185,2663,7196,385,1916,6078,6486,402,4148,3759,7526,7626,2602,10,0]
print(solution2(test2,test4))

import re

def solution3(A, B, C):
    a, b, c = "a"*A, "b"*B, "c"*C
    if a > b and a > c:        
        a = re.findall('.{1,2}',a)
        b = re.findall('.{1}',b)
        c = re.findall('.{1}',c)
    elif b > a and b > c:
        b = re.findall('.{1,2}',b)
        a = re.findall('.{1}',a)
        c = re.findall('.{1}',c)
    elif c > b and c > a : 
        c = re.findall('.{1,2}',c)
        b = re.findall('.{1}',b)
        a = re.findall('.{1}',a)

    
    return a,b,c

print(solution3(2,1,8))
